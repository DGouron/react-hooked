---
import ExpandIcon from "@/components/icons/ExpandIcon.astro";

interface Props {
  items: string[];
  selectedPage: string;
}

const { items, selectedPage } = Astro.props;
---

<div class="mx-auto mt-5 flex max-w-xl lg:hidden">
  <span
    data-slot="control"
    class="group relative block w-full before:absolute before:inset-px before:rounded-[calc(theme(borderRadius.lg)-1px)] before:shadow after:pointer-events-none after:absolute after:inset-0 after:rounded-lg after:ring-inset after:ring-transparent has-[[data-disabled]]:opacity-50 before:has-[[data-disabled]]:bg-zinc-950/5 before:has-[[data-disabled]]:shadow-none after:has-[[data-focus]]:ring-2 after:has-[[data-focus]]:ring-blue-500 dark:before:hidden"
  >
    <select
      class="relative block w-full appearance-none rounded-lg border border-ctp-text/20 bg-transparent py-[calc(theme(spacing[2.5])-1px)] pl-[calc(theme(spacing[3.5])-1px)] pr-[calc(theme(spacing.10)-1px)] text-base/6 placeholder:text-zinc-500 focus:outline-none data-[disabled]:border-zinc-950/20 data-[hover]:border-zinc-950/20 data-[invalid]:border-red-500 data-[invalid]:data-[hover]:border-red-500 data-[disabled]:opacity-100 sm:py-[calc(theme(spacing[1.5])-1px)] sm:pl-[calc(theme(spacing.3)-1px)] sm:pr-[calc(theme(spacing.9)-1px)] sm:text-sm/6 [&_optgroup]:font-semibold"
      id="mobile-select"
    >
      <option value="/docs" selected={selectedPage === "docs"}
        >Getting started</option
      >
      <optgroup label="Hooks">
        {
          items.map((item: string) => (
            <option value={`/docs/${item}`} selected={selectedPage === item}>
              {item}
            </option>
          ))
        }
      </optgroup>
    </select>
    <span
      class="pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2"
    >
      <ExpandIcon class="h-6 w-6 fill-current" />
    </span>
  </span>
</div>

<script>
  function setupSelect() {
    const select = document.getElementById("mobile-select");
    if (select) {
      select.addEventListener("change", (e: any) => {
        window.location.href = e.target!.value;
      });
    }
  }

  setupSelect();

  document.addEventListener("astro:after-swap", () => {
    setupSelect();
  });
</script>
