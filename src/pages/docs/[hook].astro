---
import { Code } from 'astro:components';
import DocsLayout from '../../layouts/DocsLayout.astro';
import { extractHookName } from '../../utils/hooks';
import jsDoc2JSON from '../../utils/jsdoc2json.ts';

export async function getStaticPaths() {
  const hooks: Record<string, string> = import.meta.glob('/src/hooks/*.ts', {query: '?raw', eager: true, import: 'default'});
  return Object.keys(hooks).map((hook) => {
    const hookName = extractHookName(hook);
    const doc = jsDoc2JSON(hooks[hook]);
    return {
      params: { hook: hookName },
      props: { hook: hooks[hook], hookName, doc },
    }
  });

}

const {hookName, hook, doc } = Astro.props;
---
<DocsLayout title={hookName} selectedPage={hookName}>
  <h1 class="text-3xl mb-4">{hookName}</h1>
  <p class="mb-6">{doc.description}</p>
  <div class="relative shadow-xl rounded-lg">
    <Code id="code" code={hook.trim()} lang="ts" theme="catppuccin-frappe" />
    <button title="Copy" id="copy-button" class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 z-20 text-zinc-50 hover:bg-white/10 hover:text-zinc-50 [&amp;_svg]:size-3 absolute right-2 top-2 p-3">
      <span class="sr-only">Copy</span>
      <svg id="copy-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256" class="fill-current w-4 h-4">
        <rect width="256" height="256" fill="none"/>
        <path d="M160,40h40a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H56a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8H96" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"/>
        <path d="M88,72V64a40,40,0,0,1,80,0v8Z" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"/>
      </svg>
      <span id="copied-text" class="hidden">âœ… Copied !</span>
    </button>
  </div>

  <div class="mt-12 text-center">
    <button id="download-button" class="bg-ctp-blue hover:bg-ctp-pink text-ctp-base text-xl py-4 px-8 rounded-lg inline-flex items-center transition-all shadow hover:shadow-lg">
      <svg class="fill-current w-6 h-6 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256">
        <rect width="256" height="256" fill="none"/>
        <path d="M200,224H56a8,8,0,0,1-8-8V40a8,8,0,0,1,8-8h96l56,56V216A8,8,0,0,1,200,224Z" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"/>
        <polyline points="152 32 152 88 208 88" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"/>
        <line x1="128" y1="120" x2="128" y2="184" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"/>
        <polyline points="104 160 128 184 152 160" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="16"/>
      </svg>
      <span>Download</span>
    </button>
  </div>


  <script define:vars={{ hookName }}>
    // Copy button
    const copyButton = document.getElementById('copy-button');
    const copiedText = document.getElementById('copied-text');
    const copyIcon = document.getElementById('copy-icon');
    copyButton.addEventListener('click', () => {
      navigator.clipboard.writeText(document.getElementById('code').innerText);
      copiedText.classList.remove('hidden');
      copyIcon.classList.add('hidden');
      setTimeout(() => {
        copiedText.classList.add('hidden');
        copyButton.classList.remove('bg-ctp-green');
        copyIcon.classList.remove('hidden');
      }, 2000);
    });

    // Download button
    const downloadButton = document.getElementById('download-button');
    downloadButton.addEventListener('click', () => {
      const blob = new Blob([document.getElementById('code').innerText], { type: 'text/plain' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `${hookName}.ts`;
      a.click();
      URL.revokeObjectURL(url);
    });
  </script>


</DocsLayout>

